Variables:
    text2video_root: /volumes/macdrive/projects/text2video
    downloads: /Users/lianglianghan/downloads
    output_final_draft: 'video_final_draft.mp4'
    output_final: 'video_final.mp4'
    output_final_prefix: 'video_final_'
    downloaded: no    
    # settings for dynamic drawing text
    video_duration:
    start: 6 # dates
    start2: 16 # news_dates
    start3: 26 # news source
    duration: 5
    text: TEXT
    font_size: 55
    delta_h: 60
    x: (w-text_w)/2
    y: h-th-20
    color_white: white   
    color_blue: '#3396F0'
    color_pink: '#F02A6C'
    color_yellow: '#FFEC1D'
    color_red: red
    color_green: green
    # input parameters
    t2v: yes # If re-generate the 'video_init.mp4'   
    dpics: yes # if download pictures
    del: yes # if delete temp files
Tube:
    # step 1: Get 'video_init.mp4' and backgournd pictures
    - PATH: {downloads}
    - COMMAND: rm 未命名*.mp4 --continue --if {del}
    - COMMAND: rm *.ass --continue --if {del}
    - PATH: {text2video_root}
    - GET_FILE_KEY_VALUE: -f ./t_article.yaml --override
    - COMMAND: python3 s_t2v.py ./t_article.yaml --if {t2v}    
    # Wating the video download to be finished
    - RUN_TUBE: -t t_wv.yaml -w {downloaded} == no --if {t2v}
    - PATH: {downloads}
    # get video download file name
    - COMMAND: ls -tr ./*.mp4 | tail -1 | awk -F '/' '{print "vname="$NF}' > video_init_name.txt --if {t2v}
    # get subtitle file name
    - COMMAND: ls -tr ./*.ass | tail -1 | awk -F '/' '{print "cname="$NF}' > caption_init_name.txt --if {t2v}
    - PAUSE: 0.05
    # load video name and caption init name to variables
    - GET_FILE_KEY_VALUE: -f video_init_name.txt --if {t2v}
    - GET_FILE_KEY_VALUE: -f caption_init_name.txt --if {t2v}
    - PATH: {text2video_root}
    - COMMAND: mkdir -p ./tmp
    - COMMAND: cp -f '{downloads}/{vname}' {text2video_root}/tmp/video_init.mp4  --if {t2v}
    - COMMAND: cp -f '{downloads}/{cname}' {text2video_root}/tmp/subtitle.ass  --if {t2v}
    # remove backgound pictures  
    - PATH: '{text2video_root}/tmp'
    - COMMAND: rm bg*.jpg --continue --if {dpics} {del}    
    - PATH: {text2video_root}
    # get background pictures
    - GET_FILE_KEY_VALUE: -f t_apikeys.yaml
    - COMMAND: python3 s_downpics.py ./t_apikeys.yaml '{keywords}' 20 ./tmp --if {dpics}
    
    # # step 2: Split init video into pieces
    # # currently it seems limition be default it could split them into 10 seconds
    # # less than 10 seconds video doesn't work
    - PATH: '{text2video_root}/tmp'
    - COMMAND: rm -f video_init_*.mp4 --continue
    - COMMAND: rm -f video_final_*.mp4 --continue
    - COMMAND: >
        ffmpeg -y -i video_init.mp4 -acodec copy -f segment -segment_time 10 
        -vcodec copy -reset_timestamps 1 -map 0 video_init_%2d.mp4

    # # step 3: Add background for each splited videos
    # # and output combined video: video_final_draft.mp4
    - PATH: {text2video_root}
    - COMMAND: python3 s_pv.py ./tmp
    - PATH: '{text2video_root}/tmp/default-bg'
    - COMMAND: rm *.* --continue --if {dpics} {del}

    # # step 4: Add title, captions, weathers
    - PATH: {text2video_root}
    - COMMAND: python3 s_weathers.py {HEFENG_API_KEY} 'changchun,sanya,xian,chongqing,shenzhen,shanghai,beijing' d_weathers.txt
    - GET_FILE_KEY_VALUE: -f d_weathers.txt
    - PATH: '{text2video_root}/tmp'
    - COMMAND: >
        ffmpeg -y -i {output_final_draft} -filter_complex "
            drawtext=fontfile='/library/Fonts/Arial Unicode.ttf':text='{title}':
                fontcolor=yellow:fontsize=125:enable='between(t,0,5)':
                box=1:boxcolor=black@0.6:boxborderw=5:x=(w-text_w)/2:y=(h/2):expansion=none,
            drawtext=fontfile='/library/Fonts/Arial Unicode.ttf':text='{sub_title}':
                fontcolor=#2B39FF:fontsize=60:enable='between(t,0,5)':
                box=1:boxcolor=yellow@0.8:boxborderw=5:x=(w-text_w)/2:y=(h/2 + 2.5*text_h):expansion=none,
            drawbox=x=300:y=945:w=1320:h=80:color=black@0.8:t=fill,
            ass=subtitle.ass,
            drawtext=fontfile='/library/Fonts/Arial Unicode.ttf':
               fontcolor=yellow:
               fontsize=50:
               text='{weathers}':
               x=mod(150*t\,w+tw)-tw:y=1:
               box=1:boxcolor=black@0.8
        "
        -codec:a copy -y {output_final_prefix}tcw.mp4
    
    # # Step 5: Add logo
    - PATH: '{text2video_root}/tmp'
    - COMMAND: >
        ffmpeg -y -i {output_final_prefix}tcw.mp4 -i cnBeta.png -i Rnews.jpg
        -filter_complex "
            [1:v]colorkey=0xffffff:0.3:0.2[ckout1];
            [2:v]colorkey=0x00ff00:0.3:0.2[ckout2];
            [0:v][ckout1]overlay=50:80[out1];
            [out1][ckout2]overlay=x=-50:y=935[out]" 
        -map "[out]" -map 0:a:0 -c:a copy {output_final_prefix}tcwl.mp4
    
    # Step 6: Add dynamic dates detail text
    - PATH: {text2video_root}
    - COMMAND: python3 s_gdates.py
    - GET_FILE_KEY_VALUE: -f d_date_detail.txt
    - PATH: '{text2video_root}/tmp'
    - SET_VARIABLE: -n x -v 20
    - SET_VARIABLE: -n y -v 1080/3*2 
    # draw dates outer box
    - COMMAND: >
        ffmpeg -y {video_duration} -i {output_final_prefix}tcwl.mp4 -filter_complex "
            drawbox=x={x}-10:y=1080/3*2-8:color=black@0.38:
                width=600:height=170:t=fill:enable='between(t,{start},{start}+2+{duration}+2)',
            drawbox=x={x}-10:y=1080/3*2-8:color={color_white}@1:
                width=600:height=170:t=1:enable='between(t,{start},{start}+2+{duration}+2)',
            drawbox=x={x}+410:y=1080/3*2-8:color={color_white}@0.5:
                width=1:height=170:t=fill:enable='between(t,{start},{start}+2+{duration}+2)'
        "        
        -c:a copy
        {output_final_prefix}tl2_dates.mp4
    # set text alpha/start value    
    - SET_VARIABLE: >
        -n alpha
        -v 
            if(lt(t,{start}),0,
                if(lt(t,{start}+2),(t-{start})/2,
                    if(lt(t,{start}+2+{duration}),1,
                        if(lt(t,{start}+2+{duration}+2),(2-(t-({start}+2+{duration})))/2,
                            0))))
    - SET_VARIABLE: -n news_date -v 发稿日期： {news_date} --if {news_date} != ''
    - SET_VARIABLE: -n news_date -v "{news_date}".replace(":","\\:") --if {news_date} != ''
    - SET_VARIABLE: -n source -v "{source}".replace(":","\\:")
    - SET_VARIABLE: -n start3 -v 16 --if {news_date} == ''
    - SET_VARIABLE: -n start3 -v 26 --if {news_date} != ''
    - SET_VARIABLE: >
        -n alpha2
        -v 
            if(lt(t,{start2}),0,
                if(lt(t,{start2}+2),(t-{start2})/2,
                    if(lt(t,{start2}+2+{duration}),1,
                        if(lt(t,{start2}+2+{duration}+2),(2-(t-({start2}+2+{duration})))/2,
                            0))))
    - SET_VARIABLE: >
        -n alpha3
        -v 
            if(lt(t,{start3}),0,
                if(lt(t,{start3}+2),(t-{start3})/2,
                    if(lt(t,{start3}+2+{duration}),1,
                        if(lt(t,{start3}+2+{duration}+2),(2-(t-({start3}+2+{duration})))/2,
                            0))))
    
    # decide the color of dayOfWeek
    - SET_VARIABLE: -n dayOfWeek -v datetime.today().weekday()
    - SET_VARIABLE: -n color_day -v green --if {dayOfWeek} < 5
    - SET_VARIABLE: -n color_day -v red --if {dayOfWeek} > 4
    
    # begin to draw Gongli, Nongli, Xingqi, TianGan, Dizhi    
    - COMMAND: >
        ffmpeg -y {video_duration} -i {output_final_prefix}tl2_dates.mp4 -filter_complex "
            drawtext=fontfile='/library/Fonts/Arial Unicode.ttf':
                text='{gongli}':
                fontsize={font_size}:
                fontcolor={color_white}@1:
                alpha='{alpha}':
                x={x}:
                y={y},
            drawtext=fontfile='/library/Fonts/Arial Unicode.ttf':
                text='{yTG_DZ}{nongli}':
                fontsize={font_size}-10:
                fontcolor={color_white}@1:
                alpha='{alpha}':
                x={x}:
                y={y}+{delta_h}+4,
            drawtext=fontfile='/library/Fonts/Arial Unicode.ttf':
                text='{xingqi}':
                fontsize={font_size}:
                fontcolor={color_day}@1:
                alpha='{alpha}':
                x={x} + 415:
                y={y}+{delta_h}*2 - 25,
            drawtext=fontfile='/library/Fonts/Arial Unicode.ttf':
                text='{xingzuo}':
                fontsize={font_size} - 28:
                fontcolor={color_yellow}@1:
                alpha='{alpha}':
                x={x} + 455:
                y={y} + 18,            
            drawtext=fontfile='/library/Fonts/Arial Unicode.ttf':
                text='{shengXiao}':
                fontsize={font_size} - 28:
                fontcolor={color_yellow}@1:
                alpha='{alpha}':
                x={x} + 468:
                y={y} + 55,
            drawtext=fontfile='/library/Fonts/Arial Unicode.ttf':
                text='{jieQi}':
                fontsize={font_size}-20:
                fontcolor={color_yellow}@1:
                alpha='{alpha}':
                x={x}:
                y={y}+{delta_h}*2,
            drawtext=fontfile='/library/Fonts/Arial Unicode.ttf':
                text='{jieQi_Date}':
                fontsize={font_size}-16-10:
                fontcolor={color_white}@1:
                alpha='{alpha}':
                x={x}+78:
                y={y}+{delta_h}*2 + 8,
            drawtext=fontfile='/library/Fonts/Arial Unicode.ttf':
                text='{news_date}':
                fontsize={font_size}-15:
                fontcolor={color_white}@1:
                alpha='{alpha2}':
                x={x}+15:
                y={y}+{delta_h}*2 + 20,
            drawtext=fontfile='/library/Fonts/Arial Unicode.ttf':
                text='{source}':
                fontsize={font_size}-15:
                fontcolor={color_white}@1:
                alpha='{alpha3}':
                x={x}+15:
                y={y}+{delta_h}*2 + 20
            " 
            -c:a copy
            {output_final_prefix}tl2_dates2.mp4
    
    # # Step 7: Genearte the final one and clean
    - PATH: '{text2video_root}/tmp'
    - COMMAND: cp -f {output_final_prefix}tl2_dates2.mp4  {output_final}
    - COMMAND: rm -f video_init_*.mp4 --continue --if {del}
    - COMMAND: rm -f video_final_*.mp4 --continue --if {del}
    - COMMAND: rm d_filelist.txt --continue --if {del}
    - COMMAND: ffplay {output_final}