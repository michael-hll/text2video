# >>> tube -t t_dpics2 -fdc -v p2v=yes, background=chezhan.png
Variables:
    dpics: /volumes/macdrive/projects/text2video/dpics
    font_color: white
    font_size: 100
    title_height: 250
    init_height: 500
    delta_height: 100
    video_height: 1920
    lines_count: 12
    p2v: yes
    delete: yes
Tube:
    # get dynamic video bg
    - cd: {dpics}
    - set: background = beidou.png --if background == 'background'
    - run: Pic2V --if p2v

    # geneate news2.txt file
    - get_keys: -f news.yaml
    - set: news_length = len(content)
    - set: lines_count = int(news_length/100 * 5)
    - set: lines_count = 12 --if lines_count < 12
    - set: line_size = math.ceil(news_length / lines_count)
    - set: delta_height = int((video_height - 1.5*init_height)/lines_count)
    - set: font_size = math.ceil((1080-200)/(line_size))
    - set: font_size = 100 --if font_size > 100
    - set: news_file = news2.txt
    - run: WriteNewsToFile
    - f_read: -f {news_file} -v lines
    - f_del: news2.txt --if delete

    # write each news line into video
    - set: input = dpics2temp.mp4
    - f_cp: -s dpics2.mp4 -d {input}
    - set: output = temp.mp4
    - run: WriteLine2V --each line in lines

    # write title
    - cmd: >
        ffmpeg -y -i {input} -vf 
        "drawtext=fontsize=125:fontcolor=red:
            fontfile='../fonts/未央简体.ttf':
            text='{title}':
            borderw=5:bordercolor=white:
            box=1:boxcolor=#FFFE11@0.8:boxborderw=5:
            x=(w-text_w)/2:y={title_height}" 
        {output}
    - f_cp: -s {output} -d {input}
    
    # play output
    - cmd: ffplay {input}

WriteLine2V:
    - cmd: >
        ffmpeg -y -i {input} -vf 
        "drawtext=fontsize={font_size}:fontcolor={font_color}:
            fontfile='../fonts/未央简体.ttf':
            text='{line}':
            borderw=5:bordercolor=black:
            x=(w-text_w)/2:y={init_height}:
            expansion=none" 
        {output}
    - f_cp: -s {output} -d {input}
    - set_var: init_height = init_height + delta_height -g

WriteNewsToFile:
    - set_var: size = 10
    - set_var: size = line_size --if line_size != 'line_size'
    - set_var: i = 0
    - f_empty: '{news_file} -c'
    - set_var: loop_times = int(len(content)/size+1)
    - run: WriteLineToText --while i < loop_times

WriteLineToText:
    - set_var: line = content[i*size:i*size+size].strip()
    - write_line: -f {news_file} -v {line} --if len(line) > 0
    - set_var: i = i + 1 -g

Pic2V:    
    - break: testing break --if no

    - set_var: dw = 1000        # delta width
    - set_var: tw = 1080 + dw   # temp width
    - cmd: >
        ffmpeg -y -i {background} -filter:v 
        "scale={tw}:1920:force_original_aspect_ratio=increase,crop={tw}:1920" 
        bg_whd.png
        --note 把下载的图片调成为 1080+dw:1920 像素

    # 把图片裁成250份，用作frames，稍后用来做动态图片视频
    - set_var: fcount = 250
    - set_var: sw = dw/fcount  # slice width
    - set_var: ls = list(range(0,fcount))
    - f_del: tmp/*.img
    - run: CutPic --each i in ls

    # 用前面做出来的250份frames 生成图片动态视频
    - cmd: ffmpeg -y -r 25 -i tmp/img%03d.jpg -pix_fmt yuv420p -vcodec libx264 dpics2.mp4
    - f_del: tmp/img*.jpg
    
CutPic:
    - set_var: pic_name_out = 'tmp/img{:03d}.jpg'.format(i)
    - set_var: x = dw - sw * i
    - cmd: >
        ffmpeg -y -i bg_whd.png -filter:v
        "crop=1080:1920:{x}:0"
        {pic_name_out}
