Variables:
    text2video_root: /volumes/macdrive/projects/text2video
    downloads: /Users/lianglianghan/downloads
    output_final_draft: 'video_final_draft.mp4'
    output_final_draft_t: 'video_final_draft_t.mp4'
    output_final_draft_tl: 'video_final_draft_tl.mp4'
    output_final: 'video_final.mp4'
    output_final_prefix: 'video_final_'
    media_type: 科技
    SPACE: '      '
    t2v: yes # If re-generate the 'video_init.mp4'   
    dpics: yes
    del: yes 
Tube:
    # step 1: Get 'video_init.mp4'
    - PATH: {downloads}
    - COMMAND: rm 未命名*.mp4 --continue
    - PATH: {text2video_root}
    - GET_FILE_KEY_VALUE: -f ./article.yaml --override
    - COMMAND: python3 t2v.py ./article.yaml --if {t2v}    
    # Wating the video download to be finished
    - PAUSE: 0.2 --if {t2v}
    - PATH: {downloads}
    - COMMAND: ls -tr ./*.mp4 | tail -1 | awk -F '/' '{print "vname="$NF}' > video_init_name.txt --if {t2v}
    - PAUSE: 0.05
    - GET_FILE_KEY_VALUE: -f video_init_name.txt
    - PATH: {text2video_root}
    - COMMAND: mkdir -p ./tmp
    - COMMAND: cp -f '{downloads}/{vname}' {text2video_root}/tmp/video_init.mp4  --if {t2v}
    # remove backgound pictures  
    - PATH: '{text2video_root}/tmp'
    - COMMAND: rm bg*.jpg --continue --if {dpics}
    - PATH: {text2video_root}
    # get background pictures
    - GET_FILE_KEY_VALUE: -f apikeys.yaml
    - COMMAND: python3 downpics.py ./apikeys.yaml '{keywords}' 20 ./tmp --if {dpics}
    
    # # step 2: Split init video into pieces
    # # currently it seems limition be default it could split them into 10 seconds
    # # less than 10 seconds video doesn't work
    - PATH: '{text2video_root}/tmp'
    - COMMAND: rm -f video_init_*.mp4 --continue
    - COMMAND: rm -f video_final_*.mp4 --continue
    - COMMAND: >
        ffmpeg -y -i video_init.mp4 -acodec copy -f segment -segment_time 10 
        -vcodec copy -reset_timestamps 1 -map 0 video_init_%2d.mp4

    # # step 3: Add background for each splited videos
    # # and output combined video: video_final_draft.mp4
    - PATH: {text2video_root}
    - COMMAND: python3 pv.py ./tmp

    # # step 4: Add title
    - PATH: '{text2video_root}/tmp'
    - COMMAND: >
        ffmpeg -y -i {output_final_draft} 
        -vf "drawtext=fontfile='/library/Fonts/Arial Unicode.ttf':text='{title}':
        fontcolor=yellow:fontsize=125:enable='between(t,0,5)':
        box=1:boxcolor=black@0.6:boxborderw=5:x=(w-text_w)/2:y=(h/2):expansion=none"
        -codec:a copy -y {output_final_prefix}t1.mp4
    - COMMAND: >
        ffmpeg -y -i {output_final_prefix}t1.mp4
        -vf "drawtext=fontfile='/library/Fonts/Arial Unicode.ttf':text='{sub_title}':
        fontcolor=#2B39FF:fontsize=60:enable='between(t,0,5)':
        box=1:boxcolor=yellow@0.5:boxborderw=5:x=(w-text_w)/2:y=(h/2 + 3*text_h):expansion=none"
        -codec:a copy -y {output_final_prefix}t2.mp4

    # Add weathers
    - PATH: {text2video_root}
    - COMMAND: python3 weathers.py {HEFENG_API_KEY} 'changchun,sanya,xian,chongqing,shenzhen,shanghai,beijing' weathers.txt
    - GET_FILE_KEY_VALUE: -f weathers.txt
    - PATH: '{text2video_root}/tmp'
    - COMMAND: >
        ffmpeg -i {output_final_prefix}t2.mp4 
          -vf "drawtext=fontfile='/library/Fonts/Arial Unicode.ttf':
               fontcolor=yellow:
               fontsize=50:
               text='{weathers}':
               x=mod(150*t\,w+tw)-tw:y=1:
               box=1:boxcolor=black@0.8"
          -codec:a copy -y {output_final_prefix}t3.mp4
    
    # # Step 5: Add logo
    - PATH: '{text2video_root}/tmp'
    - COMMAND: >
        ffmpeg -y -i {output_final_prefix}t3.mp4 -i cnBeta.png 
        -filter_complex "[1:v]colorkey=0xffffff:0.3:0.2[ckout];[0:v][ckout]overlay=50:80[out]" 
        -map "[out]" -map 0:a:0 -c:a copy {output_final_draft_tl}
    
    # logo
    - COMMAND: >
        ffmpeg -y -i {output_final_draft_tl} -i Rnews.jpg
        -filter_complex 
            "[1:v]colorkey=0x00ff00:0.3:0.2[ckout];
            [0:v][ckout]overlay=x=-50:y=980[out]" 
        -map "[out]" -map 0:a:0 -c:a copy {output_final_prefix}media_type.mp4

    # # Step 6: Genearte the final one
    - PATH: '{text2video_root}/tmp'
    - COMMAND: cp -f {output_final_prefix}media_type.mp4 {output_final}
    - COMMAND: rm -f video_init_*.mp4 --continue --if {del}
    - COMMAND: rm -f video_final_*.mp4 --continue --if {del}
    - COMMAND: rm filelist.txt --continue --if {del}
    - COMMAND: ffplay {output_final}